// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using carswebapi.Context;

#nullable disable

namespace carswebapi.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("carswebapi.Models.Brands", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Tiba"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Dena"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Pride"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Ferari"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Hyundai"
                        });
                });

            modelBuilder.Entity("carswebapi.Models.BrandsOfCars", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<long>("BrandsId")
                        .HasColumnType("bigint");

                    b.Property<long>("CarId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BrandsId");

                    b.HasIndex("CarId");

                    b.ToTable("BrandsOfCars");
                });

            modelBuilder.Entity("carswebapi.Models.Cars", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearOfBuild")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("carswebapi.Models.BrandsOfCars", b =>
                {
                    b.HasOne("carswebapi.Models.Brands", "Brands")
                        .WithMany("ModelsOfCars")
                        .HasForeignKey("BrandsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("carswebapi.Models.Cars", "Car")
                        .WithMany("BrandsOfCars")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brands");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("carswebapi.Models.Brands", b =>
                {
                    b.Navigation("ModelsOfCars");
                });

            modelBuilder.Entity("carswebapi.Models.Cars", b =>
                {
                    b.Navigation("BrandsOfCars");
                });
#pragma warning restore 612, 618
        }
    }
}
